{
  "manifest_version": "0.2",
  "name": "mnemosyne",
  "display_name": "Mnemosyne",
  "version": "0.0.2",
  "description": "MCP desktop extension for registry and consume of data between AI instances",
  "author": {
    "name": "KevinMorales0",
    "email": "0.kevin.morales.dev@gmail.com",
    "url": "https://github.com/KevinMorales0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/KevinMorales0/mnemosyne"
  },
  "server": {
    "type": "node",
    "entry_point": "server/index.js",
    "mcp_config": {
      "command": "npx",
      "args": ["tsx", "${__dirname}/server/index.ts"]
    }
  },
  "tools": [
    {
      "name": "state_save",
      "description": "Save the state of an AI instance"
    },
    {
      "name": "state_get_latest",
      "description": "Get the latest state of an AI instance"
    },
    {
      "name": "states_get_latest",
      "description": "Get the latest states of an AI instance"
    },
    {
      "name": "agent_create",
      "description": "Create an agent"
    },
    {
      "name": "agent_get_status",
      "description": "Get the status of an agent"
    },
    {
      "name": "agents_get_details",
      "description": "Get the details of all agents"
    },
    {
      "name": "message_create",
      "description": "Create a message"
    },
    {
      "name": "message_get_by_id",
      "description": "Get a message by ID"
    },
    {
      "name": "message_get_latest_unreaded",
      "description": "Get the latest unreaded message"
    },
    {
      "name": "message_get_oldest_unreaded",
      "description": "Get the oldest unreaded message"
    },
    {
      "name": "messages_get_unreaded",
      "description": "Get unreaded messages"
    },
    {
      "name": "message_set_as_readed",
      "description": "Set a message as readed"
    }
  ],
  "tools_generated": false,
  "license": "MIT",
  "compatibility": {
    "claude_desktop": ">=0.13.108",
    "platforms": ["darwin", "win32", "linux"],
    "runtimes": {
      "node": ">=22.19.0"
    }
  }
}